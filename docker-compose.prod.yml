version: '3.8'

services:


  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: ecommerce_backend_prod
    restart: always
    # Use host network to access local PostgreSQL
    # Alternative: use host.docker.internal on Windows/Mac
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - ENVIRONMENT=production
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - ./app/static:/app/static
      - ./logs:/app/logs
    depends_on: []
    # No database dependency since using local PostgreSQL
    networks:
      - backend_network
      - frontend_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # React Frontend with NGINX
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: ecommerce_frontend_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"  # For SSL termination
    volumes:
      - ./docker/nginx.prod.conf:/etc/nginx/nginx.conf:ro  # Use production NGINX config
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - frontend_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M



  # Nginx Reverse Proxy (Optional - for advanced load balancing)
  # This is separate from the frontend NGINX and can be used for additional load balancing
  nginx:
    image: nginx:alpine
    container_name: ecommerce_nginx_prod
    restart: always
    ports:
      - "8080:80"  # Alternative port for advanced proxy
    volumes:
      - ./docker/nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - frontend_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes: {}
  # No volumes needed since using local PostgreSQL

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge