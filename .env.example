# Production Testing Environment Configuration
# For testing with pre-built containers and external PostgreSQL on Ubuntu VM

# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================
# Replace with your Ubuntu VM PostgreSQL connection details
# Format: postgresql://username:password@vm_ip_address:5432/database_name
DATABASE_URL=postgresql://postgres:your_password@<host_ip>:5432/ecommerce_db

# =============================================================================
# DOMAIN CONFIGURATION (REQUIRED)
# =============================================================================
# Set to your Ubuntu VM's IP address or domain name
# This is used by NGINX for proper routing
FRONTEND_DOMAIN=<front_facing_url>

# =============================================================================
# SECURITY CONFIGURATION (REQUIRED)
# =============================================================================
# Generate a strong secret key for JWT tokens (minimum 32 characters)
SECRET_KEY=your-super-secret-key-change-this-in-production-testing

# =============================================================================
# AI INTEGRATION (OPTIONAL)
# =============================================================================
# Get your API key from Google AI Studio: https://makersuite.google.com/app/apikey
# Leave empty if you don't want AI-generated product descriptions
GEMINI_API_KEY=your-gemini-api-key-here

# =============================================================================
# QUICK SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Update DATABASE_URL with your VM's PostgreSQL credentials
# 3. Update FRONTEND_DOMAIN with your VM's IP address
# 4. Generate and set a secure SECRET_KEY
# 5. Run: docker-compose up -d
# 6. Access your app at: http://your-vm-ip

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================
# Ubuntu VM testing:
#   DATABASE_URL=postgresql://postgres:mypassword@host.docker.internal:5432/ecommerce_db
#   FRONTEND_DOMAIN=192.168.1.100
#
# Cloud VM testing:
#   DATABASE_URL=postgresql://postgres:mypassword@host.docker.internal:5432/ecommerce_db
#   FRONTEND_DOMAIN=yourvm.cloudprovider.com
