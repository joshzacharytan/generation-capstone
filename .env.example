# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================
# Replace with your PostgreSQL connection details
# For Docker: use host.docker.internal to connect to host PostgreSQL
# For local development: use localhost or your VM's IP address
DATABASE_URL=postgresql://postgres:your_password@host.docker.internal/ecommerce_db

# =============================================================================
# SECURITY CONFIGURATION (REQUIRED)
# =============================================================================
# Generate a strong secret key for JWT tokens (minimum 32 characters)
SECRET_KEY=your-super-secret-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# AI INTEGRATION (OPTIONAL)
# =============================================================================
# Get your API key from Google AI Studio: https://makersuite.google.com/app/apikey
# Leave empty if you don't want AI-generated product descriptions
GEMINI_API_KEY=your-gemini-api-key-here

# =============================================================================
# DOMAIN CONFIGURATION (REQUIRED)
# =============================================================================
# Set to your domain name or IP address for CORS configuration
# This should match where your frontend will be accessed
FRONTEND_DOMAIN=localhost

# =============================================================================
# QUICK SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Update DATABASE_URL with your PostgreSQL credentials
# 3. Update FRONTEND_DOMAIN with your domain/IP address
# 4. Generate and set a secure SECRET_KEY
# 5. Add your GEMINI_API_KEY (optional)
# 6. Run: docker-compose up -d
# 7. Access your app at: http://your-domain

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================
# Local development:
#   DATABASE_URL=postgresql://postgres:password@localhost:5432/ecommerce_db
#   FRONTEND_DOMAIN=localhost
#
# Ubuntu VM with Docker:
#   DATABASE_URL=postgresql://postgres:password@host.docker.internal:5432/ecommerce_db
#   FRONTEND_DOMAIN=192.168.1.100
#
# Production with custom domain:
#   DATABASE_URL=postgresql://postgres:password@host.docker.internal:5432/ecommerce_db
#   FRONTEND_DOMAIN=yourdomain.com